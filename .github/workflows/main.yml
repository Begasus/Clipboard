name: Clipboard Builds

on: [ push, pull_request ]
jobs:
  build-linux_x11_wayland:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        gcc: [ 10, 11, 12 ]
        arch: [ i386, amd64, arm64, riscv64 ]

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        run: |
          GPP_PACKAGE=""
          GPP_NAME="g++"
          if [[ "${{ matrix.arch }}" == "i386" ]]
          then
            GPP_PACKAGE="g++-${{ matrix.gcc }}-i686-linux-gnu"
            GPP_NAME="i686-linux-gnu-g++-${{ matrix.gcc }}"
          fi
          
          if [[ "${{ matrix.arch }}" == "amd64" ]]
          then
            GPP_PACKAGE="g++-${{ matrix.gcc }}"
            GPP_NAME="x86_64-linux-gnu-g++-${{ matrix.gcc }}"
          fi

          if [[ "${{ matrix.arch }}" == "arm64" ]]
          then
            GPP_PACKAGE="g++-${{ matrix.gcc }}-aarch64-linux-gnu"
            GPP_NAME="aarch64-linux-gnu-g++-${{ matrix.gcc }}"
            # add arm64 architecture from Ubuntu ports
            sudo echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main multiverse universe" | sudo tee -a /etc/apt/sources.list
            sudo echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main multiverse universe" | sudo tee -a /etc/apt/sources.list
            sudo echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-security main multiverse universe" | sudo tee -a /etc/apt/sources.list
            sudo echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-backports main multiverse universe" | sudo tee -a /etc/apt/sources.list
          fi

          if [[ "${{ matrix.arch }}" == "riscv64" ]]
          then
            GPP_PACKAGE="g++-${{ matrix.gcc }}-riscv64-linux-gnu"
            GPP_NAME="riscv64-linux-gnu-g++-${{ matrix.gcc }}"
            # add riscv64 architecture from Ubuntu ports
            sudo echo "deb [arch=riscv64] http://ports.ubuntu.com/ jammy main multiverse universe" | sudo tee -a /etc/apt/sources.list
            sudo echo "deb [arch=riscv64] http://ports.ubuntu.com/ jammy-updates main multiverse universe" | sudo tee -a /etc/apt/sources.list
            sudo echo "deb [arch=riscv64] http://ports.ubuntu.com/ jammy-security main multiverse universe" | sudo tee -a /etc/apt/sources.list
            sudo echo "deb [arch=riscv64] http://ports.ubuntu.com/ jammy-backports main multiverse universe" | sudo tee -a /etc/apt/sources.list
          fi
          
          # This limits apt to only looking or amd64 and i386 from Azure, see https://github.com/actions/virtual-environments/issues/1961
          sudo sed -i'' -E 's/^deb http:\/\/(azure.archive|security).ubuntu.com/deb [arch=amd64,i386] http:\/\/\1.ubuntu.com/' /etc/apt/sources.list

          sudo dpkg --add-architecture "${{ matrix.arch }}"
          sudo apt-get update
          sudo apt-get install -y \
            "${GPP_PACKAGE}" \
            "libx11-dev:${{ matrix.arch }}" \
            "libwayland-dev:${{ matrix.arch }}"
          
          cd build
          
          cmake .. \
            "-DCMAKE_CXX_COMPILER=${GPP_NAME}" \
            "-DCMAKE_BUILD_TYPE=MinSizeRel"
          
          cmake --build .
      - uses: actions/upload-artifact@v3
        with:
          name: clipboard-linux-gcc${{ matrix.gcc }}-${{ matrix.arch }}
          path: build/output
  build-macos-amd64:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=MinSizeRel
          cmake --build .
      - uses: actions/upload-artifact@v3
        with:
          name: clipboard-macos-amd64
          path: build/output
  build-windows-amd64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run a multi-line script
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=MinSizeRel
          cmake --build . --config Release
      - uses: actions/upload-artifact@v3
        with:
          name: clipboard-windows-amd64
          path: build/output
